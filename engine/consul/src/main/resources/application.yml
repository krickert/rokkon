quarkus:
  application:
    name: engine-consul
  
  # Generate gRPC code from protobuf
  generate-code:
    grpc:
      scan-for-proto: com.rokkon.pipeline:protobuf,com.google.api.grpc:proto-google-common-protos
  
  # gRPC Server configuration
  grpc:
    server:
      port: ${ENGINE_GRPC_PORT:48081}  # Override with ENGINE_GRPC_PORT env var
      host: ${ENGINE_GRPC_HOST:0.0.0.0}
      max-inbound-message-size: ${ENGINE_GRPC_MAX_MESSAGE_SIZE:4194304}
  
  # Consul Config - Load configuration from Consul KV store
  consul-config:
    enabled: ${ENGINE_CONSUL_CONFIG_ENABLED:true}
    # agent:
    #   host: ${CONSUL_HOST:localhost}
    #   port: ${CONSUL_PORT:8500}
    properties-value-keys:
      - config/application  # Load from /config/application in Consul KV
      - config/${quarkus.profile}  # Profile-specific config
    # format: yaml  # Support YAML format in Consul
    # watch: true   # Enable hot reload of config changes
    # watch-period: 10s  # Check for changes every 10 seconds

  # HTTP configuration
  http:
    port: ${ENGINE_HTTP_PORT:38081}  # Override with ENGINE_HTTP_PORT env var
    host: ${ENGINE_HTTP_HOST:0.0.0.0}

  # Swagger UI
  swagger-ui:
    always-include: true
    path: /swagger-ui

  # OpenAPI
  smallrye-openapi:
    path: /openapi
    info-title: Rokkon Pipeline Configuration API
    info-version: 1.0.0
    info-description: REST API for managing pipeline configurations in Consul

  # REST configuration

  # Stork service discovery for Consul
  stork:
    # Pipeline services discovery
    pipeline-service:
      service-discovery:
        type: consul
        consul-host: ${CONSUL_HOST:localhost}
        consul-port: ${CONSUL_PORT:8500}

    # Module services discovery
    module-service:
      service-discovery:
        type: consul
        consul-host: ${CONSUL_HOST:localhost}
        consul-port: ${CONSUL_PORT:8500}

  # Logging
  log:
    level: INFO
    category:
      "com.rokkon":
        level: DEBUG
    console:
      enable: true
      format: "%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n"

  # Index dependencies for reflection
  index-dependency:
    com-rokkon-pipeline-engine-models:
      group-id: com.rokkon.pipeline
      artifact-id: engine-models
    commons-interface:
      group-id: com.rokkon.pipeline
      artifact-id: interface


# Consul configuration
consul:
  host: ${CONSUL_HOST:localhost}
  port: ${CONSUL_PORT:8500}
  kv:
    prefix: ${CONSUL_KV_PREFIX:rokkon}

# Pipeline configuration
pipeline:
  cluster:
    name: ${PIPELINE_CLUSTER_NAME:default}
  consul:
    init:
      enabled: ${PIPELINE_CONSUL_INIT_ENABLED:true}
    watch:
      enabled: ${PIPELINE_CONSUL_WATCH_ENABLED:true}
      interval: ${PIPELINE_CONSUL_WATCH_INTERVAL:10s}
      services:
        interval: ${PIPELINE_CONSUL_WATCH_SERVICES_INTERVAL:5s}

# Rokkon configuration defaults
# These can be overridden by values in Consul KV store
rokkon:
  engine:
    grpc-port: 49000
    rest-port: 8080
    debug: false
  
  consul:
    cleanup:
      enabled: true
      interval: 5m
      zombie-threshold: 2m
      cleanup-stale-whitelist: true
    health:
      check-interval: 10s
      deregister-after: 1m
      timeout: 5s
  
  modules:
    auto-discover: false
    service-prefix: "module-"
    require-whitelist: true
    connection-timeout: 30s
    max-instances-per-module: 10
  
  default-cluster:
    name: default
    auto-create: true
    description: "Default cluster for Rokkon pipelines"

# Development profile
"%dev":
  quarkus:
    live-reload:
      instrumentation: true

# Dev profile
"%dev":
  consul:
    host: ${CONSUL_HOST:localhost}
    port: ${CONSUL_PORT:8501}  # Dev mode uses 8501

# Test profile
"%test":
  quarkus:
    log:
      level: DEBUG