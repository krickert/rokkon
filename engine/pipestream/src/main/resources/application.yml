quarkus:
  application:
    name: pipeline-engine

  generate-code:
    grpc:
      scan-for-proto: com.rokkon.pipeline:protobuf,com.google.api.grpc:proto-google-common-protos
      codegen:
        type: mutiny
  http:
    port: ${QUARKUS_HTTP_PORT:38082}
    host: ${ENGINE_HOST:0.0.0.0}

  grpc:
    server:
      port: ${QUARKUS_GRPC_SERVER_PORT:48082}
      host: ${ENGINE_HOST:0.0.0.0}
      enable-reflection-service: true
      max-inbound-message-size: 419430400
      use-separate-server: true  # Use separate gRPC server (default mode)
      health:
        enabled: true


    # gRPC client defaults
    clients:
      default:
        max-inbound-message-size: 419430400

  # Consul configuration
  consul-config:
    # Enabled by default for proper engine registration
    enabled: true
    fail-on-missing-key: false  # Don't fail if config doesn't exist in Consul
    agent:
      host-port: ${consul.host:localhost}:${consul.port:8500}
    properties-value-keys: pipeline/${CLUSTER_NAME:default}/config
    # Watch for changes
    watch:
      enabled: true
      period: 10s
    # Configuration format
    format: properties

  # Note: There is no quarkus-consul-client extension for service registration
  # The engine uses manual registration via EngineRegistrationService

  # Jackson configuration for consistent JSON formatting
  jackson:
    property-naming-strategy: SNAKE_CASE
    
  # Index external dependencies for CDI discovery
  index-dependency:
    engine-consul:
      group-id: com.rokkon.pipeline
      artifact-id: consul
    engine-models:
      group-id: com.rokkon.pipeline
      artifact-id: engine-models
    engine-validators:
      group-id: com.rokkon.pipeline
      artifact-id: engine-validators
    # Add missing classes for reflection
    rokkon-commons:
      group-id: com.rokkon.pipeline
      artifact-id: rokkon-commons

  # Health check configuration
  health:
    extensions:
      enabled: true
    readiness:
      enabled: true
    liveness:
      enabled: true

  # Logging
  log:
    level: INFO
    category:
      "com.rokkon":
        level: DEBUG
      "io.grpc":
        level: INFO

  # Container image configuration
  container-image:
    build: true
    group: rokkon
    name: rokkon-engine
    tag: latest
    registry: nas.rokkon.com:5000
    push: false  # Disable auto-push, we'll do it manually
    insecure: true  # For local registry without TLS

  # Dev services configuration
  devservices:
    enabled: true

# Engine-specific configuration
consul:
  host: ${CONSUL_HOST:localhost}
  port: ${CONSUL_PORT:8500}

# Engine configuration
engine:
  host: ${ENGINE_HOST:localhost}

# Stork configuration for service discovery
stork:
  # Engine service registration with Consul
  pipeline-engine:
    service-registrar:
      type: consul
      consul-host: ${consul.host:localhost}
      consul-port: ${consul.port:8500}
      # Register with gRPC port as primary
      instance-port: ${quarkus.grpc.server.port:48082}
      # Additional metadata
      metadata:
        service-type: ENGINE
        grpc-port: ${quarkus.grpc.server.port:48082}
        http-port: ${quarkus.http.port:38082}
        version: ${quarkus.application.version:1.0.0}
      # Health check configuration
      check-type: grpc
      check-interval: 10s
      deregister-critical-service-after: 30s
  
  # Default service discovery for all services
  default:
    service-discovery:
      type: consul
      consul-host: ${consul.host:localhost}
      consul-port: ${consul.port:8500}
      refresh-period: 10s
    load-balancer:
      type: round-robin

  # Module-specific configurations
  echo-service:
    service-discovery:
      type: consul
      consul-host: ${consul.host:localhost}
      consul-port: ${consul.port:8500}
    load-balancer:
      type: least-requests

  chunker-service:
    service-discovery:
      type: consul
      consul-host: ${consul.host:localhost}
      consul-port: ${consul.port:8500}
    load-balancer:
      type: least-response-time

  parser-service:
    service-discovery:
      type: consul
      consul-host: ${consul.host:localhost}
      consul-port: ${consul.port:8500}
    load-balancer:
      type: round-robin

  embedder-service:
    service-discovery:
      type: consul
      consul-host: ${consul.host:localhost}
      consul-port: ${consul.port:8500}
    load-balancer:
      type: least-requests

grpc:
  client:
    max-inbound-message-size: ${GRPC_MAX_MESSAGE_SIZE:4194304}
    keepalive-time-seconds: ${GRPC_KEEPALIVE_TIME:30}
    keepalive-timeout-seconds: ${GRPC_KEEPALIVE_TIMEOUT:10}

# SmallRye Config - disable unknown property validation
smallrye:
  config:
    mapping:
      validate-unknown: false

# Dev profile
"%dev":
  quarkus:
    log:
      level: INFO
      console:
        enable: true
      category:
        "com.rokkon.pipeline":
          level: DEBUG
        "org.testcontainers":
          level: INFO
        "io.quarkus.devservices":
          level: DEBUG

    # HTTP configuration for dev mode
    http:
      host: 0.0.0.0  # Listen on all interfaces in container
      port: 38090

    # gRPC configuration for dev mode  
    grpc:
      server:
        host: 0.0.0.0  # Listen on all interfaces in container
        port: 49000

    # Dev Services configuration
    devservices:
      enabled: true

    # Container configuration for dev mode
    container-image:
      build: true
      group: rokkon
      name: rokkon-engine-dev
      tag: dev

    # Dev mode configuration
    dev:
      instrumentation: true

    # In dev mode, enable Consul features if consul.host is configured
    consul-config:
      enabled: false

  # Consul configuration for dev mode
  consul:
    host: ${CONSUL_HOST:consul-dev}  # Use container name in dev
    port: ${CONSUL_PORT:8500}
    enabled: true

  # Enable auto-start of Consul container in dev mode
  rokkon:
    dev:
      consul:
        auto-start: true

# Test profile  
"%test":
  quarkus:
    grpc:
      server:
        port: 0  # Random port for tests
    consul-config:
      enabled: false  # Disable in tests unless explicitly needed
    log:
      level: INFO

# Production profile
"%prod":
  quarkus:
    consul-config:
      enabled: true  # Enable Consul config in production
    log:
      level: INFO
