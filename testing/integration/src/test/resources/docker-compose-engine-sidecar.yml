version: '3.8'

services:
  # Step 2: Add engine with sidecar
  
  consul-server:
    image: hashicorp/consul:latest
    command: agent -dev -ui -client=0.0.0.0
    ports:
      - "8500:8500"
    networks:
      - test-net
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 10s

  # Seed config
  consul-seeder:
    image: rokkon/seed-engine-consul-config:latest
    depends_on:
      consul-server:
        condition: service_healthy
    networks:
      - test-net
    volumes:
      - ./seed-data.json:/seed-data.json:ro
    command: [
      "-h", "consul-server",
      "-p", "8500",
      "--key", "config/application",
      "--import", "/seed-data.json",
      "--force"
    ]

  # Engine
  pipeline-engine:
    image: rokkon/engine:latest
    environment:
      - QUARKUS_HTTP_PORT=38082
      - QUARKUS_GRPC_SERVER_PORT=48082
      - QUARKUS_HTTP_HOST=0.0.0.0  # Bind to all interfaces
      - QUARKUS_GRPC_SERVER_HOST=0.0.0.0  # Bind gRPC to all interfaces
      - QUARKUS_CONSUL_HOST=127.0.0.1  # Connect to sidecar
      - QUARKUS_CONSUL_PORT=8500
      - QUARKUS_CONSUL_CONFIG_ENABLED=true
      - QUARKUS_CONSUL_CONFIG_AGENT_HOST_PORT=127.0.0.1:8500  # Force local sidecar
      - QUARKUS_PROFILE=prod  # Use prod profile to avoid personal configs
      - CLUSTER_NAME=test-cluster
      - ROKKON_CLUSTER_NAME=test-cluster
      - ROKKON_ENGINE_NAME=test-engine
    ports:
      - "38082:38082"
    depends_on:
      consul-seeder:
        condition: service_completed_successfully
    networks:
      - test-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:38082/q/health"]
      interval: 10s

  # Engine sidecar
  engine-sidecar:
    image: hashicorp/consul:latest
    network_mode: "service:pipeline-engine"
    command: >
      consul agent 
      -data-dir=/consul/data
      -retry-join=consul-server
      -bind=127.0.0.1

networks:
  test-net:
    driver: bridge