version: '3.8'

services:
  # Consul server for service discovery and configuration
  consul-server:
    image: hashicorp/consul:latest
    expose:
      - "8500"
      - "8600/udp"
    command: agent -dev -ui -client=0.0.0.0 -bind=0.0.0.0
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Seed application config
  consul-seeder-app:
    image: rokkon/seed-engine-consul-config:latest
    depends_on:
      consul-server:
        condition: service_healthy
    networks:
      - test-network
    volumes:
      - ./seed-data.json:/seed-data.json:ro
    command: [
      "-h", "consul-server",
      "-p", "8500",
      "--key", "config/application",
      "--import", "/seed-data.json",
      "--force"
    ]

  # Seed test profile config (empty for now)
  consul-seeder-profile:
    image: rokkon/seed-engine-consul-config:latest
    depends_on:
      consul-seeder-app:
        condition: service_completed_successfully
    networks:
      - test-network
    command: [
      "-h", "consul-server",
      "-p", "8500",
      "--key", "config/test",
      "--config", "/dev/null",  # Empty config
      "--force"
    ]
    
  # Seed cluster config
  consul-seeder-cluster:
    image: rokkon/seed-engine-consul-config:latest
    depends_on:
      consul-seeder-profile:
        condition: service_completed_successfully
    networks:
      - test-network
    volumes:
      - ./test-consul-config.properties:/config.properties:ro
    command: [
      "-h", "consul-server",
      "-p", "8500",
      "--key", "pipeline/test-cluster/config",
      "--config", "/config.properties",
      "--force"
    ]

  # Verify configs are seeded
  consul-verify:
    image: hashicorp/consul:latest
    depends_on:
      consul-seeder-cluster:
        condition: service_completed_successfully
    networks:
      - test-network
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "echo 'Verifying Consul configs...' && \
      consul kv get config/application && \
      echo '✓ Application config found' && \
      consul kv get pipeline/test-cluster/config && \
      echo '✓ Cluster config found' && \
      echo 'All configs verified!'"
    environment:
      - CONSUL_HTTP_ADDR=consul-server:8500

  # Pipeline Engine - starts after configs are verified
  pipeline-engine:
    image: rokkon/engine:latest
    environment:
      - QUARKUS_HTTP_PORT=38082
      - QUARKUS_GRPC_SERVER_PORT=48082
      - QUARKUS_CONSUL_HOST=consul-server
      - QUARKUS_CONSUL_PORT=8500
      - QUARKUS_CONSUL_CONFIG_ENABLED=true
      - QUARKUS_PROFILE=test  # Use test profile
      - CLUSTER_NAME=test-cluster
      - ROKKON_CLUSTER_NAME=test-cluster
      - ROKKON_ENGINE_NAME=test-engine
      # Enable debug mode
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    expose:
      - "38082"  # HTTP port
      - "48082"  # gRPC port
      - "5005"    # Debug port
    depends_on:
      consul-verify:
        condition: service_completed_successfully
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:38082/q/health"]
      interval: 10s
      timeout: 5s
      retries: 10

  # Echo Module (optional - for full pipeline testing)
  echo-module:
    image: rokkon/echo-module:1.0.0-SNAPSHOT
    environment:
      - QUARKUS_HTTP_PORT=39091
      - QUARKUS_GRPC_SERVER_PORT=49091
      - MODULE_NAME=echo
      - MODULE_VERSION=1.0.0
      - ENGINE_HOST=pipeline-engine
      - ENGINE_GRPC_PORT=48082
      # Enable debug mode
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006
    expose:
      - "39091"  # HTTP
      - "49091"  # gRPC
      - "5006"    # Debug port
    depends_on:
      pipeline-engine:
        condition: service_healthy
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:39091/q/health"]
      interval: 10s
      timeout: 5s
      retries: 10

  # Test Module (optional - for full pipeline testing)
  test-module:
    image: rokkon/test-module:1.0.0-SNAPSHOT
    environment:
      - QUARKUS_HTTP_PORT=39092
      - QUARKUS_GRPC_SERVER_PORT=49092
      - MODULE_NAME=test
      - MODULE_VERSION=1.0.0
      - ENGINE_HOST=pipeline-engine
      - ENGINE_GRPC_PORT=48082
      # Enable debug mode
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007
    expose:
      - "39092"  # HTTP
      - "49092"  # gRPC
      - "5007"    # Debug port
    depends_on:
      pipeline-engine:
        condition: service_healthy
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:39092/q/health"]
      interval: 10s
      timeout: 5s
      retries: 10

networks:
  test-network:
    name: test-pipeline-network
    driver: bridge