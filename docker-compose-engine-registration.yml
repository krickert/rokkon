version: '3.8'

services:
  # Consul service for service discovery and configuration
  consul:
    image: hashicorp/consul:1.19.2
    container_name: rokkon-consul-registration
    ports:
      - "8500:8500"       # Consul UI and HTTP API
      - "8600:8600/udp"   # Consul DNS
    command: agent -dev -ui -client=0.0.0.0
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    networks:
      - rokkon-network-registration
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Rokkon Engine - designed to self-register with Consul
  rokkon-engine:
    image: rokkon/engine:latest # Assuming this image is built locally
    container_name: rokkon-engine-registration
    build:
      context: ./rokkon-engine # Build context for the engine
      dockerfile: src/main/docker/Dockerfile.jvm # Use the JVM Dockerfile
    ports:
      - "38090:38090"   # Engine HTTP port (from application.properties)
      - "49000:49000"   # Engine gRPC port (from application.properties)
    environment:
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - QUARKUS_HTTP_PORT=38090
      - QUARKUS_GRPC_SERVER_PORT=49000
      - QUARKUS_CONSUL_CONFIG_AGENT_HOST=consul
      - QUARKUS_CONSUL_CONFIG_AGENT_PORT=8500
      - ENGINE_HOST=rokkon-engine # Crucial: Force engine to register with its service name
      - QUARKUS_PROFILE=docker-dev # Activate Docker-specific configuration
    depends_on:
      consul:
        condition: service_healthy
    networks:
      - rokkon-network-registration
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:38090/q/health"] # Health check on HTTP port
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  rokkon-network-registration:
    name: rokkon-network-registration
    driver: bridge
