####
# Development Dockerfile for test-module
# This uses host networking to simplify local development
#
# Build with: docker build -f src/main/docker/Dockerfile.dev -t rokkon/test-module:dev .
# Run with: docker run -i --rm --network=host rokkon/test-module:dev
####
FROM registry.access.redhat.com/ubi9/openjdk-21:1.21

ENV LANGUAGE='en_US:en'

# We make four distinct layers so if there are application changes the library layers can be re-used
COPY --chown=185 build/quarkus-app/lib/ /deployments/lib/
COPY --chown=185 build/quarkus-app/*.jar /deployments/
COPY --chown=185 build/quarkus-app/app/ /deployments/app/
COPY --chown=185 build/quarkus-app/quarkus/ /deployments/quarkus/

# Copy the CLI tool and entrypoint from build directory
COPY --chown=185 build/docker/rokkon-cli.jar /deployments/rokkon-cli.jar
COPY --chown=185 src/main/bash/module-entrypoint.sh /deployments/module-entrypoint.sh

# Create CLI wrapper and make scripts executable
RUN echo '#!/bin/bash' > /deployments/rokkon && \
    echo 'java -jar /deployments/rokkon-cli.jar "$@"' >> /deployments/rokkon && \
    chmod +x /deployments/rokkon /deployments/module-entrypoint.sh

# Set PATH to include the deployments directory
ENV PATH="/deployments:${PATH}"

# Dev mode defaults - connect to local services
ENV ENGINE_HOST="localhost"
ENV ENGINE_PORT="8081"
ENV CONSUL_HOST="localhost"
ENV CONSUL_PORT="8500"
ENV MODULE_HOST="localhost"
ENV MODULE_PORT="49095"

EXPOSE 39095
EXPOSE 49095
USER 185
ENV JAVA_OPTS_APPEND="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"
ENV JAVA_APP_JAR="/deployments/quarkus-run.jar"

ENTRYPOINT ["/deployments/module-entrypoint.sh"]